-- phpMyAdmin SQL Dump
-- version 3.4.5
-- http://www.phpmyadmin.net
--
-- Client: localhost
-- Généré le : Lun 30 Septembre 2013 à 15:55
-- Version du serveur: 5.5.16
-- Version de PHP: 5.3.8

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Base de données: `tests_proto`
--

-- --------------------------------------------------------

--
-- Structure de la table `t_evaluations`
--

CREATE TABLE IF NOT EXISTS `t_evaluations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `end_time` datetime DEFAULT NULL,
  `start_time` datetime DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `profil_id` int(11) NOT NULL,
  `test_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FKD092F52CB47E1D1C` (`profil_id`),
  KEY `FKD092F52C80E357B3` (`test_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Structure de la table `t_profils`
--

CREATE TABLE IF NOT EXISTS `t_profils` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `admin` tinyint(1) NOT NULL,
  `dateActivation` datetime DEFAULT NULL,
  `email` varchar(255) NOT NULL,
  `login` varchar(255) NOT NULL,
  `nom` varchar(255) NOT NULL,
  `pass` varchar(255) NOT NULL,
  `prenom` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- Contenu de la table `t_profils`
--

INSERT INTO `t_profils` (`id`, `admin`, `dateActivation`, `email`, `login`, `nom`, `pass`, `prenom`) VALUES
(1, 1, '2013-09-30 15:53:42', 'admin@ossia-conseil.com', 'admin', 'DA SILVEIRA', 'admin', 'Tata');

-- --------------------------------------------------------

--
-- Structure de la table `t_profil_historiques`
--

CREATE TABLE IF NOT EXISTS `t_profil_historiques` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action` varchar(255) DEFAULT NULL,
  `timestamp` datetime DEFAULT NULL,
  `admin_id` int(11) DEFAULT NULL,
  `profil_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK6BE26C7EB6A7DB29` (`admin_id`),
  KEY `FK6BE26C7EB47E1D1C` (`profil_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=2 ;

--
-- Contenu de la table `t_profil_historiques`
--

INSERT INTO `t_profil_historiques` (`id`, `action`, `timestamp`, `admin_id`, `profil_id`) VALUES
(1, 'ADD', '2013-09-30 15:53:42', 1, 1);

-- --------------------------------------------------------

--
-- Structure de la table `t_propositions_responses`
--

CREATE TABLE IF NOT EXISTS `t_propositions_responses` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `propositionCorrecte` tinyint(1) NOT NULL,
  `valeur` longtext NOT NULL,
  `question_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FK240AA31BB2D8945C` (`question_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=362 ;

--
-- Contenu de la table `t_propositions_responses`
--

INSERT INTO `t_propositions_responses` (`id`, `propositionCorrecte`, `valeur`, `question_id`) VALUES
(1, 1, 'Unordered when we iterate on', 1),
(2, 0, 'Ordered when we iterate on', 1),
(3, 0, 'Indexed', 1),
(4, 0, 'Can contain duplicate values', 1),
(5, 1, 'Cannot contain duplicate values', 1),
(6, 0, 'Couldn’t contain object that redefines hashcode() method', 1),
(7, 1, 'final', 2),
(8, 0, 'static', 2),
(9, 0, 'protected', 2),
(10, 1, 'public', 2),
(11, 0, 'private', 2),
(12, 0, 'volatile', 2),
(13, 1, 'protected Object calc() { return this;}', 3),
(14, 0, 'private Object calc() { return this;}', 3),
(15, 1, 'public Object calc() { return this;}', 3),
(16, 0, 'Object calc() { return this;}', 3),
(17, 1, 'public String calc() { return new String(“toto”)};', 3),
(18, 0, 'protected Object calc(int i) { return this;}', 3),
(19, 0, 'Generated by the compiler itself.', 4),
(20, 1, 'Hard-Coded by the user himself and incremented when the Java Bean change one of its attributes always by himself.', 4),
(21, 0, 'It’s not matter to care about this attribute.', 4),
(22, 0, 'None of these answers.', 4),
(23, 0, 'A runtime exception is a checked exception.', 5),
(24, 1, 'A runtime exception is an unchecked exception.', 5),
(25, 1, 'We must declare a checked exception in the declaration of a method if this one throws one and doesn’t catch it.', 5),
(26, 0, 'A checked exception should extend RuntimeException.', 5),
(27, 0, 'A potential ArithmeticException in code must always be catch by a try/catch block.', 5),
(28, 0, 'Nothing', 6),
(29, 0, 'House (only because there is a ‘return’ in the catch block).', 6),
(30, 0, 'House \nBar', 6),
(31, 0, 'Hello \nHouse \nBar', 6),
(32, 1, 'House \nHello', 6),
(33, 0, 'Hello', 6),
(34, 0, '"X extends Y" is correct if and only if X is a class and Y is an interface', 7),
(35, 0, '"X extends Y" is correct if and only if X is an interface and Y is a class', 7),
(36, 1, '"X extends Y" is correct if X and Y are either both classes or both interfaces', 7),
(37, 0, '"X extends Y" is correct for all combinations of X and Y being classes and/or interfaces', 7),
(38, 0, '0', 8),
(39, 0, '1', 8),
(40, 1, '2', 8),
(41, 0, 'Compilation fails', 8),
(42, 0, 'It is not possible to know', 8),
(43, 0, 'An exception is thrown at runtime', 8),
(44, 1, 'Compilation succeeds', 9),
(45, 0, 'Compilation fails with an error on line 1', 9),
(46, 0, 'Compilation fails with an error on line 3', 9),
(47, 0, 'Compilation fails with an error on line 5', 9),
(48, 0, 'Compilation fails with an error on line 7', 9),
(49, 0, 'Compilation fails with an error on line 9', 9),
(50, 0, 'x2.do2();', 10),
(51, 0, '(Y)x2.do2();', 10),
(52, 1, '((Y)x2).do2();', 10),
(53, 0, 'None of the above statements will compile', 10),
(54, 0, 'If the equals() method returns true, the hashCode() comparison == might return false', 11),
(55, 1, 'If the equals() method returns false, the hashCode() comparison == might return true', 11),
(56, 0, 'If the hashCode() comparison == returns true, the equals() method must return true', 11),
(57, 1, 'If the hashCode() comparison == returns true, the equals() method might return true', 11),
(58, 0, 'If the hashCode() comparison != returns true, the equals() method might return true', 11),
(59, 1, 'test case', 12),
(60, 0, 'production live2', 12),
(61, 0, 'test case live2', 12),
(62, 0, 'Compilation fails', 12),
(63, 0, 'An exception is thrown at runtime', 12),
(64, 1, 'The notifyAll() method must be called from a synchronized context', 13),
(65, 0, 'To call wait(), an object must own the lock on the thread', 13),
(66, 0, 'The notify() method is defined in class java.lang.Thread', 13),
(67, 1, 'When a thread is waiting as a result of wait(), it release its lock', 13),
(68, 0, 'The notify() method causes a thread to immediately release its lock', 13),
(69, 0, 'The difference between notify() and notifyAll() is that notifyAll() notifies all waiting threads, regardless of the object they''re waiting on', 13),
(70, 0, 'return new ArrayList<Inn>();', 14),
(71, 1, 'return new ArrayList<Hotel>();', 14),
(72, 0, 'return new ArrayList<Object>();', 14),
(73, 0, 'return new ArrayList<Business>();', 14),
(74, 0, 'public class MyRunnable extends Runnable{public void run(){}}', 15),
(75, 0, 'public class MyRunnable extends Object{public void run(){}}', 15),
(76, 1, 'public class MyRunnable implements Runnable{public void run(){}}', 15),
(77, 0, 'public class MyRunnable implements Runnable{void run(){}}', 15),
(78, 0, 'public class MyRunnable implements Runnable{public void start(){}}', 15),
(79, 0, '15', 16),
(80, 1, '21', 16),
(81, 0, 'An exception is thrown at runtime', 16),
(82, 0, 'Compilation fails due to multiple errors', 16),
(83, 0, 'Compilation fails due only to an error on line 4', 16),
(84, 0, 'Compilation fails due only to an error on line ', 16),
(85, 0, 'PreparedStatement', 17),
(86, 0, 'ResultSet', 17),
(87, 1, 'Connection', 17),
(88, 0, 'Statement', 17),
(89, 1, 'getString(0)', 18),
(90, 0, 'getString(1)', 18),
(91, 1, 'getObject(“Name”)', 18),
(92, 0, 'getInt(1)', 18),
(93, 1, 'Message B is likely to be delivered before Message A', 19),
(94, 0, 'Message B will certainly be delivered before Message A', 19),
(95, 0, 'Both messages are delivered at the same time', 19),
(96, 1, 'TRUE', 20),
(97, 0, 'FALSE', 20),
(98, 1, 'TRUE', 21),
(99, 0, 'FALSE', 21),
(100, 0, 'The code will not compile.', 22),
(101, 0, 'Bean1 will be null', 22),
(102, 1, 'An org.springframework.beans.factory.NoSuchBeanDefinitionException will be thrown at runtime.', 22),
(103, 0, 'An org.springframework.beans.FatalBeanException will be thrown at runtime.', 22),
(104, 0, 'A reference to the bean will nevertheless be obtained.', 22),
(105, 1, '<bean name="name1" class="ExampleBean1" />', 23),
(106, 1, '<bean name="name2" class="ExampleBean2" singleton="true"/>', 23),
(107, 0, '<bean id="name3" class="ExampleBean3" singleton="false"/>', 23),
(108, 0, '<bean id="coolBean" class="somepackage.CoolBeanContainingAList">\n	<property name="list">\n		<value>1</value>\n		<value>2</value>\n		<value>3</value>\n	</property>\n</bean>', 24),
(109, 0, '<bean id="coolBean" class="somepackage.CoolBeanContainingAList">\n	<property name="list">\n		<list>\n			<value>1</value>\n			<value>2</value>\n			<value>3</value>\n		</list>\n	</property>\n</bean>', 24),
(110, 0, '<bean id="coolBean" class="somepackage.CoolBeanContainingAList">\n	<property name="list">\n		<value>1,2,3</value>\n	</property>\n</bean>', 24),
(111, 1, '<bean id="coolBean" class="somepackage.CoolBeanContainingAList">\n	<property name="list">\n		<list>\n			<value type="java.lang.Integer">1</value>\n			<value type="java.lang.Integer">2</value>\n			<value type="java.lang.Integer">3</value>\n		</list>\n	</property>\n</bean>', 24),
(112, 1, '<beans>\n	<bean id="v8Engine" class="ar.com.carProject.engine.V8Engine"/>\n	<bean id="car" class="ar.com.car.Car">\n		<property name="engine" ref="v8Engine"/>\n	</bean>\n</beans>', 25),
(113, 0, '<beans>\n	<bean id="v8Engine" class="ar.com.carProject.engine.V8Engine"/>\n	<bean id="car" class="ar.com.car.Car">\n		<property name="engine" value="v8Engine"/>\n	</bean>\n</beans>', 25),
(114, 0, '<beans>\n	<bean id="v8Engine" class="ar.com.carProject.engine.V8Engine"/>\n	<bean id="car" class="ar.com.car.Car">\n		<property name="engine">\n			<value>v8Engine</value>\n		</property>\n	</bean>\n</beans>', 25),
(115, 1, '<beans>\n	<bean id="car" class="ar.com.car.Car">\n		<property name="engine">\n			<bean class="ar.com.carProject.engine.V8Engine"/>\n		</property>\n	</bean>\n</beans>', 25),
(116, 1, 'TRUE', 26),
(117, 0, 'FALSE', 26),
(118, 1, 'TRUE', 27),
(119, 0, 'FALSE', 27),
(120, 1, 'Stateless session beans', 28),
(121, 0, 'Stateful session beans', 28),
(122, 1, 'Message-driven beans', 28),
(123, 0, 'Entity beans', 28),
(124, 1, 'Interceptors can be specified at the method level', 29),
(125, 1, 'Interceptors can be specified at the class level', 29),
(126, 1, 'Interceptors can be specified at the ejb-jar level', 29),
(127, 1, 'REQUIRED', 30),
(128, 0, 'REQUIRED_NEW', 30),
(129, 0, 'SUPPORTS', 30),
(130, 0, 'MANDATORY', 30),
(131, 1, 'NOT_SUPPORTED', 30),
(132, 0, 'NEVER', 30),
(133, 0, 'server', 31),
(134, 0, 'context', 31),
(135, 0, 'request', 31),
(136, 1, 'application', 31),
(137, 0, 'servletContext', 31),
(138, 0, 'Invoking req.getSession() will return null.', 32),
(139, 0, 'Invoking req.getSession(true) will return null.', 32),
(140, 1, 'Invoking req.getSession(false) will return null', 32),
(141, 1, 'Invoking req.getSession() will return a new session.', 32),
(142, 1, 'Invoking req.getSession(true) will return a new session.', 32),
(143, 0, 'Invoking req.getSession(false) will return a new session.', 32),
(144, 1, 'You should NOT write a constructor for a servlet.', 33),
(145, 0, 'You should NOT override a servlet’s init() method.', 33),
(146, 0, 'You should NOT override a servlet’s doGet() method.', 33),
(147, 0, 'You should NOT override a servlet’s doPost() method.', 33),
(148, 1, 'You should NOT override a servlet’s service() method.', 33),
(149, 0, 'You should NOT override a servlet’s destroy() method.', 33),
(150, 0, 'Yes', 34),
(151, 1, 'No', 34),
(152, 0, 'Adapter', 35),
(153, 1, 'Service locator', 35),
(154, 0, 'Visitor', 35),
(155, 0, 'Decorator', 35),
(156, 1, 'Business delegate', 35),
(157, 0, 'Interpreter', 35),
(158, 0, 'Discard=”true”', 36),
(159, 0, 'singleInsert=”true”', 36),
(160, 1, 'inverse=”true”', 36),
(161, 0, 'reverse=”true”', 36),
(162, 0, 'if (a is B){\n	a.Print();\n}', 37),
(163, 1, 'if (a is B){\n	B b = (B)a;\n	b.Print();\n}', 37),
(164, 0, 'B b = a as B;\nb.Print();', 37),
(165, 1, 'B b = a as B;\nif (b != null)\n	b.Print();\n}', 37),
(166, 1, 'interface', 38),
(167, 0, 'abstract class', 38),
(168, 0, 'static class', 38),
(169, 0, 'delegate', 38),
(170, 0, 'into a CLR file', 39),
(171, 1, 'into an IL file', 39),
(172, 0, 'into a binary file', 39),
(173, 0, 'into a COM file', 39),
(174, 0, 'a,ab,ac,ad', 40),
(175, 0, 'abcd,abcd,abcd,abcd', 40),
(176, 0, 'abcd,b,c,d', 40),
(177, 0, 'abd,abd,abc,abc', 40),
(178, 1, 'abd,abd,abc,abd', 40),
(179, 0, 'CbasebaseB', 41),
(180, 0, 'CAbaseB', 41),
(181, 0, 'baseAbaseB', 41),
(182, 1, 'baseABBA', 41),
(183, 1, 'is initialized once', 42),
(184, 1, 'can be assigned at declaration', 42),
(185, 1, 'can be assigned in the class constructor', 42),
(186, 0, 'can only be assigned in the class constructor', 42),
(187, 0, 'System', 43),
(188, 0, 'Sytem.Addin', 43),
(189, 0, 'System.Class', 43),
(190, 1, 'System.Object', 43),
(191, 0, 'System.Data', 43),
(192, 0, 'A String object is mutable', 44),
(193, 1, 'A string object can be changed either by referencing another string object or by creating a new string', 44),
(194, 0, 'A StringBuilder object is immutable', 44),
(195, 1, 'to provide a parameterless constructor', 45),
(196, 1, 'to declare abstract the Calcul method', 45),
(197, 1, 'to declare abstract the Identifiant class', 45),
(198, 0, 'to declare virtual the Calcul method', 45),
(199, 0, 'to declare protected the Id field of the Identifiant class', 45),
(200, 0, 'error detected\nend', 46),
(201, 0, '2222\nerror detected', 46),
(202, 0, '2222\nend', 46),
(203, 0, '22222', 46),
(204, 1, '2222\nerror detected\nend', 46),
(205, 0, 'end', 46),
(206, 0, 'Array types are value types', 47),
(207, 0, 'Reference types are stored on the stack', 47),
(208, 1, 'An operation on one reference type variable may affect another reference variable', 47),
(209, 0, 'An assembly consists of a unique file', 48),
(210, 1, 'The manifest describes the identity of the assembly', 48),
(211, 1, 'The manifest gives information on referenced assemblies', 48),
(212, 0, 'Adaptor', 49),
(213, 0, 'Facade', 49),
(214, 0, 'Decorator', 49),
(215, 1, 'Singleton', 49),
(216, 0, 'Bridge', 49),
(217, 0, 'Dictionary is organized based on the hash code of the key', 50),
(218, 1, 'Dictionary is a generic collection', 50),
(219, 0, 'HasTable is generic collection', 50),
(220, 0, 'Adaptor', 51),
(221, 0, 'Facade', 51),
(222, 0, 'Decorator', 51),
(223, 1, 'Singleton', 51),
(224, 0, 'Bridge', 51),
(225, 0, 'does not compile', 52),
(226, 1, 'is a boxing conversion', 52),
(227, 0, 'is an unboxing conversion', 52),
(228, 0, 'is a litteral conversion', 52),
(229, 0, 'can be applied to objects of any class', 53),
(230, 0, 'can only be applied to collections', 53),
(231, 1, 'can only be applied to classes implementing the IEnumerable interface', 53),
(232, 0, 'can only be applied to classes implementing the IEnumerator interface', 53),
(233, 0, 'can only be applied to classes implementing the IEnumerate interface', 53),
(234, 1, 'A delegate is a type that defines a method signature', 54),
(235, 0, 'A delegate is a method overloaded in a derived class', 54),
(236, 1, 'A delegate object encapsulates a reference to a method', 54),
(237, 1, 'A delegate allow methods to be passed as parameters', 54),
(238, 1, 'void Reset()', 55),
(239, 0, 'void Size{get;}', 55),
(240, 0, 'IEnumerator GetEnumerator()', 55),
(241, 0, 'bool MovePrevious()', 55),
(242, 1, 'bool MoveNext()', 55),
(243, 1, 'Object Current{get;}', 55),
(244, 1, 'Adaptor', 56),
(245, 0, 'Facade', 56),
(246, 0, 'Decorator', 56),
(247, 0, 'Singleton', 56),
(248, 0, 'i=1 i=2', 57),
(249, 0, 'i=1 i=2 i=3', 57),
(250, 0, 'i=1 i=2 i=3 i=4 i=5 i=6 i=7......', 57),
(251, 0, 'i=1 i=1', 57),
(252, 0, 'i=1 i=1 i=1', 57),
(253, 1, 'i=1 i=1 i=1 i=1 i=1 i=1 i=1....', 57),
(254, 0, 'pPI = &PI;', 58),
(255, 0, 'pPI = &r;', 58),
(256, 1, '*pPI = PI;', 58),
(257, 0, 'r = *pPI;', 58),
(258, 0, 'A copy of an object ', 59),
(259, 0, 'A pointer to a const object', 59),
(260, 0, 'A pointer to a non const object', 59),
(261, 1, 'An alias for an object ', 59),
(262, 0, 'It depends of the type of p.', 60),
(263, 0, 'It destroys data pointed by p and sets the pointer to NULL', 60),
(264, 1, 'It destroys data pointed by p.', 60),
(265, 0, 'It destroys the pointer p.', 60),
(266, 0, 'It sets the pointer to NULL.', 60),
(267, 0, 'delete pX;', 61),
(268, 1, 'delete [ ] pX;', 61),
(269, 0, 'delete pX [ ];', 61),
(270, 0, 'delete [100] pX;', 61),
(271, 0, 'delete pX[100];', 61),
(272, 0, 'A keywork for multiple inheritance', 62),
(273, 1, 'A keywork to allow a class or a function to have access to the private and protected membres of a class', 62),
(274, 0, 'A keyword to share memory', 62),
(275, 0, 'A keyword to propagate exceptions', 62),
(276, 0, '23', 63),
(277, 0, '32', 63),
(278, 1, '0231', 63),
(279, 0, '0213', 63),
(280, 0, '2013', 63),
(281, 0, '2031', 63),
(282, 0, 'overriden methods', 64),
(283, 0, 'abstract methods', 64),
(284, 0, 'overloaded methods', 64),
(285, 1, 'virtual methods', 64),
(286, 0, 'static methods', 64),
(287, 0, 'A A A A', 65),
(288, 1, 'A B A A', 65),
(289, 0, 'A B B B', 65),
(290, 0, 'A B B A', 65),
(291, 0, 'A B A B', 65),
(292, 0, 'A A B A', 65),
(293, 0, 'A A A A', 66),
(294, 0, 'A B A A', 66),
(295, 1, 'A B B B', 66),
(296, 0, 'A B B A', 66),
(297, 0, 'A B A B', 66),
(298, 0, 'A A B A', 66),
(299, 0, 'A class whose all members are privated and/or protected', 67),
(300, 1, 'A class with at least one pure virtual method', 67),
(301, 0, 'A class without members', 67),
(302, 0, 'A class whose all methods are virtual.', 67),
(303, 0, 'A class without inheritance', 67),
(304, 0, 'The compilator generates a constructor which initializes all members to NULL or 0. ', 68),
(305, 1, 'The compilator generates a constructor which does nothing.', 68),
(306, 0, 'The class doesn''t compile.', 68),
(307, 0, 'Nothing.', 68),
(308, 0, 'It doesn''t compile.', 69),
(309, 0, 'The compilator generates an = operator which does nothing.', 69),
(310, 0, 'The compilator calls the copy constructor.', 69),
(311, 1, 'The compilator generates a = operator which copies all members one by one.', 69),
(312, 0, 'C tmpC = objC;', 70),
(313, 1, 'tmpC.operator=( objC );', 70),
(314, 1, 'objC = tmpC;', 70),
(315, 1, 'robjC = tmpC;', 70),
(316, 0, 'const A& A::A(const A&);', 71),
(317, 0, 'A& A::A(const A& );', 71),
(318, 0, 'A A::A(A rArg) ;', 71),
(319, 0, 'A::A(const A rArg);', 71),
(320, 0, 'A::A(A rArg);', 71),
(321, 1, 'A::A(const A& rArg);', 71),
(322, 0, 'Add', 72),
(323, 1, 'Stones', 72),
(324, 0, 'AddStones', 72),
(325, 0, 'Nothing', 72),
(326, 0, 'virtual', 73),
(327, 1, 'template', 73),
(328, 0, 'static', 73),
(329, 0, 'abstract', 73),
(330, 0, 'ostream& C::operator << (ostream &);', 74),
(331, 1, 'ostream& operator << (ostream &, const C&);', 74),
(332, 0, 'void C::operator << (ostream & );', 74),
(333, 0, 'void operator << (const C&, ostream &);', 74),
(334, 1, 'vector', 75),
(335, 1, 'list', 75),
(336, 1, 'deque', 75),
(337, 1, 'multimap', 75),
(338, 1, 'set', 75),
(339, 0, 'Adapter', 76),
(340, 0, 'Facade', 76),
(341, 0, 'Decorator', 76),
(342, 1, 'Singleton', 76),
(343, 0, 'Prototype', 76),
(344, 0, 'to improve research algorithms by increment.', 77),
(345, 1, 'to allocate a resource in the constructor of a class, and deallocate it in its destructor in a easy and safe way', 77),
(346, 0, 'to read all information in only one instruction. ', 77),
(347, 0, 'to refence abstract and invariant interface ', 77),
(348, 1, 'Adaptor', 78),
(349, 0, 'Facade', 78),
(350, 0, 'Decorator', 78),
(351, 0, 'Singleton', 78),
(352, 0, 'Manages circular references in a easy way.', 79),
(353, 0, 'Manages references on objects of different types.', 79),
(354, 1, 'Automatically frees the object it points to when the object is no more referenced.', 79),
(355, 0, 'Cleans as a garbage collector the circular references.', 79),
(356, 0, '12 9 5 0', 80),
(357, 0, 'c 9 5 0', 80),
(358, 1, 'c 9 5', 80),
(359, 0, 'c 9 5 5', 80),
(360, 0, '5 9 12', 80),
(361, 0, 'c 9 5 5 0', 80);

-- --------------------------------------------------------

--
-- Structure de la table `t_questions`
--

CREATE TABLE IF NOT EXISTS `t_questions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `contenu` longtext,
  `correctionHints` varchar(255) DEFAULT NULL,
  `intitule` longtext,
  `niveau` varchar(255) DEFAULT NULL,
  `sousDomaine` varchar(255) DEFAULT NULL,
  `test_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKBE28F30280E357B3` (`test_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=81 ;

--
-- Contenu de la table `t_questions`
--

INSERT INTO `t_questions` (`id`, `contenu`, `correctionHints`, `intitule`, `niveau`, `sousDomaine`, `test_id`) VALUES
(1, '', NULL, 'Which are true concerning collections extended the Set interface:', 'INTERMEDIAIRE', 'Java Core', 1),
(2, '', NULL, 'A non-inner class can be:', 'INTERMEDIAIRE', 'Java Core', 1),
(3, 'protected  Object calc(){\n	return new String(“toto”);\n}', NULL, 'Considering the method below\n Admit there is a subclass that inherits this method. Which methods is a good override of it? ', 'INTERMEDIAIRE', 'Java Core', 1),
(4, '', NULL, 'For avoiding surprises in remote access with RMI, the attribute SerialVersionUID in Java Bean must be :', 'INTERMEDIAIRE', 'Java Core', 1),
(5, '', NULL, 'Which are true?', 'INTERMEDIAIRE', 'Java Core', 1),
(6, 'class Foo {\n	private int x = 0;\n	private int y = 2;\n	public static void main(String[] args) {\n		new  Foo().calc();\n	}\n\n	public void calc(){\n		try {\n			int w = x/y;\n			System.out.println(“House”);\n			int z = y/x;\n			System.out.println(“Bar”);\n		}\n		catch(ArithmeticException e){\n			return;\n		}\n		finally{\n			System.out.println(“Hello”);\n		}\n	}\n}', NULL, 'What will be printed?', 'INTERMEDIAIRE', 'Java Core', 1),
(7, '', NULL, 'Which is true? ', 'INTERMEDIAIRE', 'Java core', 1),
(8, 'class CardBoard {\n	Short story = 200;\n	CardBoard go(CardBoard cb) {\n		cb = null;\n		return cb;\n	}\n	public static void main(String[] args) {\n		CardBoard c1 = new CardBoard();\n		CardBoard c2 = new CardBoard();\n		CardBoard c3 = c1.go(c2);\n		c1 = null;\n		// do Stuff\n	}\n}', NULL, 'Given the code below , When // do Stuff is reached, how many objects are eligible for GC?', 'INTERMEDIAIRE', 'Java Core', 1),
(9, 'public class Electronic implements Device {public void doIt() { } }\n\nabstract class Phone1 extends Electronic { }\n\nabstract class Phone2 extends Electronic { public void doIt(int x) { } }\n\nclass Phone3 extends Electronic implements Device{ public void doStuff() { } }\n\ninterface Device { public void doIt(); }', NULL, 'Given, What is the result? ', 'INTERMEDIAIRE', 'Java core', 1),
(10, 'class X { void do1() { } }\nclass Y extends X { void do2() { } }\nclass Chrome {\n	public static void main(String [] args) {\n		X x1 = new X();\n		X x2 = new Y();\n		Y y1 = new Y();\n		// insert code here\n	}\n}', NULL, 'Given the following, Which inserted at line 9 will compile? ', 'INTERMEDIAIRE', 'Java core', 1),
(11, '', NULL, 'Which statements are true about comparing two instances of the same class, given that the equals() and hashCode() methods have been properly overridden? (Choose all that apply.)', 'INTERMEDIAIRE', 'Java core', 1),
(12, 'class Fork {\n	public static void main(String[] args) {\n		if(args.length == 1 || args[192].equals("test")) {\n			System.out.println("test case");\n		} else {\n			System.out.println("production " + args[0]);\n		}\n	}\n}', NULL, 'With the command-line invocation : \n"java Fork live2"\nWhat is the result? ', 'INTERMEDIAIRE', 'Java core', 1),
(13, '', NULL, 'Which are true? ', 'INTERMEDIAIRE', 'Java Core', 1),
(14, 'import java.util.*;\nclass Business { }\nclass Hotel extends Business { }\npublic class Travel {\n	ArrayList<Hotel> go() {\n	// insert code here\n	}\n}', NULL, 'Which, inserted independently at line 9, will compile? ', 'INTERMEDIAIRE', 'Java Core', 1),
(15, 'Runnable target = new MyRunnable();\nThread myThread = new Thread(target);\n', NULL, 'The following block of code creates a Thread using a Runnable target\nWhich of the following classes can be used to create the target, so that the preceding code compiles correctly?', 'INTERMEDIAIRE', 'Java Core', 1),
(16, 'public class Navel {\n	private int size = 7;\n	private static int length = 3;\n	public static void main(String[] args) {\n		new Navel().go();\n	}\n	void go() {\n		int size = 5;\n		System.out.println(new Gazer().adder());\n	}\n	class Gazer {\n		int adder() { return size * length; }\n	}\n}', NULL, 'What is the result?', 'INTERMEDIAIRE', 'Java Core', 1),
(17, '', NULL, 'Which interface allows setting the auto-commit mode to false? ', 'INTERMEDIAIRE', 'JDBC', 1),
(18, 'Name       Age        Address\n-----------------------------------\nMike       24         123 Four st.', NULL, 'Assume a query returns the following row of information:\nWith a ResultSet positioned to read from this row, which of the following methods could we use to read Mike''s name? ', 'INTERMEDIAIRE', 'JDBC', 1),
(19, '', NULL, 'Two messages are created and sent at the same time. \nMessage A has a JMSPriority of 4, whilst Message B has a JMSPriority of 7.  \n\nAccording to the JMS Specification, which of the following is true? ', 'INTERMEDIAIRE', 'Messaging', 1),
(20, '', NULL, 'The value zero for JMSExpiration header field in the JMS Message indicates that the message will never expire. ', 'INTERMEDIAIRE', 'Messaging', 1),
(21, '', NULL, 'You can read multiple bean definition files with a ClassPathXmlApplicationContext and obtain a single BeanFactory.', 'INTERMEDIAIRE', 'Spring', 1),
(22, 'Object bean1 = beanFactoryRef.getBean("beanName");', NULL, 'What will happen if the following code is executed but no bean matching that name exists in the configuration?', 'INTERMEDIAIRE', 'Spring', 1),
(23, '', NULL, 'Which configuration will deploy the bean as a singleton?', 'INTERMEDIAIRE', 'Spring', 1),
(24, 'package somepackage;\n\npublic class CoolBeanContainingAList {\n	private List list;\n	public void setList(List list) {\n		this.list = list;\n	}\n}', NULL, 'Consider the following bean class.\nWe want to define this bean in an application context.\nWe want to inject a list of Integers into the bean containing the values 1, 2 and 3. \nIn which way(s) can this be configured?', 'INTERMEDIAIRE', 'Spring', 1),
(25, 'package ar.com.car.engine;\n\npublic interface Engine {\n	int getHP();\n}\n\nand\n\npackage ar.com.car;\n\npublic class Car {\n\n	private Engine engine;\n	public void setEngine(Engine engine) {\n		this.engine= engine;\n	}\n}', NULL, 'Given the following two classes\nSelect the correct way to inject a V8Engine into the car (V8Engine implements the Engine interface).', 'INTERMEDIAIRE', 'Spring', 1),
(26, '', NULL, 'Suppose we have a default interceptor defined in the deployment descriptor. If we want to disable that default interceptor for a class, we can annotate that class with @ExcludeDefaultInterceptors.', 'INTERMEDIAIRE', 'EJB', 1),
(27, '', NULL, 'Suppose we have an EJB class. Providing settings through the deployment descriptor will override the ones set through annotations (if any).', 'INTERMEDIAIRE', 'EJB', 1),
(28, '', NULL, 'Select candidates for instance pooling:', 'INTERMEDIAIRE', 'EJB', 1),
(29, '', NULL, 'Which of the following statements about EJB 3.0 interceptors mechanism are true?', 'INTERMEDIAIRE', 'EJB', 1),
(30, '', NULL, 'Which transaction attributes make sense used with a Message-Driven Bean?', 'INTERMEDIAIRE', 'EJB', 1),
(31, '', NULL, 'In a JSP, which implicit object can access the attributes from the ServletContext?', 'INTERMEDIAIRE', 'JSP/Servlet', 1),
(32, '', NULL, 'if req is a reference to an HttpServletRequest and there is no current session, what is true about req.getSession() ?', 'INTERMEDIAIRE', 'JSP/Servlet', 1),
(33, '', NULL, 'What is generally true about the lifecycle of a servlet ? ', 'INTERMEDIAIRE', 'JSP/Servlet', 1),
(34, '', NULL, 'Is a servlet thread-safe ?', 'INTERMEDIAIRE', 'JSP/Servlet', 1),
(35, '', NULL, 'Which patterns are likely to be used to hide the complex JNDI lookup ? (choose two answers)', 'INTERMEDIAIRE', 'JSP/Servlet', 1),
(36, 'Event e=(Event)session.load(Event.class,eid);\nPerson p=(Person)session.load(Person.class,pid);\np.getEvents().add(e);\ne.getPersons().add(p);\nreturn p;', NULL, 'Consider the case given in the example: Event and Person are two entities and there is a many to many mapping between them. \nWhich keyword must we use in the mapping file to avoid to insert twice in the join table PERSON_EVENTS? (suppose that we use a hibernate mapping file for the mapping)', 'INTERMEDIAIRE', 'Hibernate', 1),
(37, 'class A {\n}\nclass B:A {\n	public void Print() {\n		Console.WriteLine("B");\n	}\n}\nclass C:A {\n}\nclass Program {\n	static void Main(string[] args) {\n		A[] tab = { new C(), new A(), new B() };\n		foreach(A a in tab) {\n			a.Print();//Compilation error\n		}\n	}\n}', NULL, 'What should be modified in the following program to make it compile and run normally?', 'JUNIOR', 'Static and Dynamic Cast', 2),
(38, '', NULL, 'What is the alternative to multiple inheritance in C# ?', 'JUNIOR', 'Interfaces - Multiple Inheritance', 2),
(39, '', NULL, 'A C# program is compiled ...', 'JUNIOR', 'C# Compilation Unit', 2),
(40, 'class Person{\n	private string Name;\n	public Person(string name) { Name = name; }\n	public override string ToString() { return Name; }\n	public Person Copy1() { return new Person(Name); }\n	public Person Copy2() { return this; }\n	public void Append(string s) { Name += s; }\n}\n\nclass Program{\n	static void Main(string[] args){\n		Person p = new Person("a");\n		Person p2 = p;\n		p2.Append("b");\n		Person p3 = p.Copy1();\n		p3.Append("c");\n		Person p4 = p.Copy2();\n		p4.Append("d");\n		Console.WriteLine("{0},{1},{2},{3}", p, p2, p3, p4);\n	}\n}', NULL, 'What is the output of the following program:', 'JUNIOR', 'Deep Copy & Shalow Copy', 2),
(41, 'public class A {\n	private string Id = "base";\n	public A() { }\n	public A(string id) {Id = id;}\n	public virtual void Display() {\n		Console.Write(Id);\n	}\n}\n\npublic class B:A {\n	private string Id_b;\n	public B(string id): base(id) {Id_b = id;}\n	public override void Display() {\n		base.Display();\n		Console.Write(Id_b);\n	}\n}\n\npublic class C:A {\n	public void Display() {\n		Console.Write("C");\n	}\n}\n\nclass Program {\n	static void Main(string[] args) {\n		List<A> list = new List<A>();\n		list.Add(new C());  list.Add(new A("A"));  list.Add(new B("B"));\n		foreach(A a in list) { a.Display();}\n	}\n}', NULL, 'What is the output of the following program:', 'JUNIOR', 'Inheritance and virtual methods', 2),
(42, '', NULL, 'A readonly field ...', 'JUNIOR', 'The Readonly keyword', 2),
(43, '', NULL, 'What is the ultimate class of all .Net classes?', 'JUNIOR', '.Net Class Framework', 2),
(44, '', NULL, 'Tick the correct answer(s)', 'JUNIOR', 'String and StringBuilder classes', 2),
(45, 'class Identifiant {\n	private string Id;\n	public Identifiant(string id) {\n		Id = id;\n	}\n	public void Calcul();\n}\nclass Personne:Identifiant {\n	private string Name;\n	public Personne(string name): base() {\n		Name = name;\n	}\n	public void Operation() {\n		Console.WriteLine("operation");\n	}\n	public override void Calcul() {\n		Console.WriteLine("calcul");\n	}\n}', NULL, 'What modifications are needed to make this program compile?', 'JUNIOR', 'Inheritance', 2),
(46, 'class Identifiant {\n	private string Id;\n	public Identifiant(string id) {\n		Id = id;\n	}\n	public void Calcul();\n}\nclass Personne:Identifiant {\n	private string Name;\n	public Personne(string name): base() {\n		Name = name;\n	}\n	public void Operation() {\n		Console.WriteLine("operation");\n	}\n	public override void Calcul() {\n		Console.WriteLine("calcul");\n	}\n}', NULL, 'What is the output of the following program?', 'JUNIOR', 'Exception catching', 2),
(47, '', NULL, 'Tick the correct answer(s):', 'INTERMEDIAIRE', 'Value Types - Reference Types', 2),
(48, '', NULL, 'Tick the correct answer(s)', 'INTERMEDIAIRE', 'Assembly and Manifest', 2),
(49, '', NULL, 'Which design pattern insures that only one instance of a class can be instanciated?', 'INTERMEDIAIRE', 'Singleton design pattern', 2),
(50, '', NULL, 'What is the difference between the Hashtable and Dictionary collections?', 'INTERMEDIAIRE', 'Generics: HashTable and Dictionary', 2),
(51, 'public class A {\n	private static A a;\n	private A() { }\n	public static A Operation() {\n		if(a == null) {\n			a = new A();\n		}\n		return a;\n	}\n}', NULL, 'Which design pattern is implemented below?', 'INTERMEDIAIRE', 'Singleton design Pattern', 2),
(52, '3.ToString();', NULL, 'The following instruction:', 'INTERMEDIAIRE', 'Boxing conversion', 2),
(53, '', NULL, 'The foreach loop ...', 'INTERMEDIAIRE', 'IEnumerable interface', 2),
(54, '', NULL, 'Tick the correct answer(s)', 'INTERMEDIAIRE', 'delegates', 2),
(55, '', NULL, 'A class Implementing the IEnumerator interface must implement ...', 'SENIOR', 'IEnumeator interface', 2),
(56, '', NULL, 'Which design pattern is implemented below?', 'SENIOR', 'Adaptor Pattern', 2),
(57, 'for(int i=1; i<=3 ; i++) {\n	if (i=1) \n		std::cout << " i=1"; \n	else \n		std::cout << " i=" << i; \n}', NULL, 'What will be the ouput of the following code?', 'JUNIOR', 'for if', 3),
(58, 'pPI = &PI;\npPI = &r;\n*pPI = PI;\nr = *pPI;', NULL, 'Consider the following code :\ndouble r = 6.28; \nconst double  PI = 3.14; \nconst double * pPI; \n\nWhich statement(s) is(are) illegal among the following ones?', 'JUNIOR', 'const-pointer-reference', 3),
(59, '', NULL, 'What''s the reference of an object?', 'JUNIOR', 'Reference', 3),
(60, '', NULL, 'What does the statement"delete p;"?', 'JUNIOR', 'delete', 3),
(61, 'X *pX = new X[100]; ', NULL, 'Consider the following statement :\nHow to destroy pX?', 'JUNIOR', 'Clean memory', 3),
(62, '', NULL, 'What is the meaning of friend?', 'JUNIOR', 'Friend', 3),
(63, '#include <iostream>\nclass X {\n	public:\n	X() { std::cout << 0; }\n	~X() { std::cout << 1; }\n};\n\nclass Y : public X {\n	public:\n	Y() { std::cout << 2; }\n	~Y() { std::cout << 3; }\n};\n\nint main() {\n	Y y;\n	return 0;\n}', NULL, 'What is the output of the following code?', 'JUNIOR', 'Construction/destruction order', 3),
(64, '', NULL, 'What is necesseray for dynamic polymorphism?', 'JUNIOR', 'Dynamic polymorphism', 3),
(65, '#include <iostream>\nclass A{ \n	public:\n	void f(){ std::cout<<"A ;}\n};\n\nstruct B : public A	{ \n	public:\n	void f(){ std::cout<<"B ";}\n};\n\nint main() {\n	A a;\n	B b;\n	A *c( &b );\n	A &d( *c );\n	a.f();\n	b.f();\n	c->f();\n	d.f();\n	return 0;\n}', NULL, 'What is the output of the following code?', 'JUNIOR', 'Polymorphism', 3),
(66, '#include <iostream>\nclass A{ \n	public:\n	virtual void f() { std::cout<<"A ";}\n};\n\nstruct B : public A	{ \n	public:\n	virtual void f() { std::cout<<"B ";}\n};\n\nint main() {\n	A a;\n	B b;\n	A *c( &b );\n	A &d( *c );\n	a.f();\n	b.f();\n	c->f();\n	d.f();\n	return 0;\n}', NULL, 'What is the output of the following program?', 'JUNIOR', 'Polymorphism', 3),
(67, '', NULL, 'What''s an abstract class?', 'JUNIOR', 'Abstract class', 3),
(68, '', NULL, 'What happen if no constructor is defined in a class?', 'INTERMEDIAIRE', 'Default constructor', 3),
(69, '', NULL, 'What happen if no affectation operator is defined in a class?', 'INTERMEDIAIRE', 'Affectation operator', 3),
(70, 'C                objC;\nC& robjC  = objC;', NULL, 'Consider the code below, which statement(s) call the affectation operator of the class C?', 'INTERMEDIAIRE', 'Affectation operator', 3),
(71, '', NULL, 'For the class A, what is the signature of its copy constructor?', 'INTERMEDIAIRE', 'Copy constructor', 3),
(72, '#include <iostream>\nclass Exception_A {};\nclass Exception_B : virtual public Exception_A {};\nclass Exception_C : public Exception_B {};\n\nint main() {\n	try {\n		throw Exception_B();\n	}\n	catch(Exception_C){ std::cout<<"Add"<<std::endl; }\n	catch(Exception_A){ std::cout<<"Stones"<<std::endl; }\n	catch(Exception_B){ std::cout<<"AddStones"<<std::endl; \n	return 0;\n}', NULL, 'What is the output of the following code?', 'INTERMEDIAIRE', 'Exception', 3),
(73, '', NULL, 'Which word makes you think about static polymorphism?', 'INTERMEDIAIRE', 'Static polymorphism', 3),
(74, '', NULL, 'Which function allows a class C to be used by cout? ', 'INTERMEDIAIRE', 'Stream', 3),
(75, '', NULL, 'Which of the fllowing are containers from the STL?', 'INTERMEDIAIRE', 'STL containers', 3),
(76, '', NULL, 'Which design pattern insures that only one instance of a class can be instanciated?', 'INTERMEDIAIRE', 'Singleton design pattern', 3),
(77, '', NULL, 'RAII is a programming idiom...', 'SENIOR', 'RAII', 3),
(78, '#include <iostream>\nclass IComponent{\n	public : \n		virtual void Action() = 0;\n	};\nclass Component{\n	public : \n		Component ( )  {};\n		void ActionComponent(){ std::cout<<"Component does something";}\n	};\nclass Component2 : public IComponent , private Component {\n	public : \n		Component2( ) : Component() {}; \n		virtual void Action(){\n			ActionComponent();\n		}\n	};\nint main(){\n	IComponent *c = new Component2();\n	c->Action();\n	return 0;\n}', NULL, 'Which design pattern is implemented below?', 'SENIOR', 'Adapter Pattern', 3),
(79, '', NULL, 'What does a smart pointer?', 'SENIOR', 'smart pointer', 3),
(80, '#include <iostream>\n#include <iterator>\n#include <set>\n#include <algorithm>\nint main() {\n	using std::set;\n\n	typedef std::istream_iterator< int > In;\n	typedef std::ostream_iterator< int > Out;\n\n	set< int , std::greater< int > > res;\n	copy( In( std::cin ) , In() , inserter( res , res.begin() ) );\n	remove_copy( res.begin() , res.end(), Out( std::cout << std::hex , " " ) , 0 );\n	return 0;\n}', NULL, 'What''s the output if we enter "0 12 5 9 5" for the following code?', 'SENIOR', 'STL', 3);

-- --------------------------------------------------------

--
-- Structure de la table `t_responses`
--

CREATE TABLE IF NOT EXISTS `t_responses` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `evaluation_id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `FKB38F26079D5C3C1C` (`evaluation_id`),
  KEY `FKB38F2607B2D8945C` (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Structure de la table `t_responses_t_propositions_responses`
--

CREATE TABLE IF NOT EXISTS `t_responses_t_propositions_responses` (
  `response_id` int(11) NOT NULL,
  `proposition_id` int(11) NOT NULL,
  PRIMARY KEY (`response_id`,`proposition_id`),
  UNIQUE KEY `proposition_id` (`proposition_id`),
  KEY `FK81047A1351DBDBDE` (`proposition_id`),
  KEY `FK81047A1318B2F27C` (`response_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Structure de la table `t_sheets`
--

CREATE TABLE IF NOT EXISTS `t_sheets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `additionalInfo` varchar(255) DEFAULT NULL,
  `duree` int(11) NOT NULL,
  `intitule` varchar(255) NOT NULL,
  `type` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;

--
-- Contenu de la table `t_sheets`
--

INSERT INTO `t_sheets` (`id`, `additionalInfo`, `duree`, `intitule`, `type`) VALUES
(1, 'Each question can have several answers, don’t forget it.\nPlease considere that JDK 6 is used for each question.', 90, 'Java test', 'JAVA'),
(2, NULL, 30, 'Test C#', 'C#'),
(3, NULL, 30, 'Test C++', 'C++');

-- --------------------------------------------------------

--
-- Structure de la table `t_sheet_historiques`
--

CREATE TABLE IF NOT EXISTS `t_sheet_historiques` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action` varchar(255) DEFAULT NULL,
  `timestamp` datetime DEFAULT NULL,
  `admin_id` int(11) DEFAULT NULL,
  `test_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKD174920BB6A7DB29` (`admin_id`),
  KEY `FKD174920B80E357B3` (`test_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4 ;

--
-- Contenu de la table `t_sheet_historiques`
--

INSERT INTO `t_sheet_historiques` (`id`, `action`, `timestamp`, `admin_id`, `test_id`) VALUES
(1, 'ADD', '2013-09-30 15:53:43', 1, 1),
(2, 'ADD', '2013-09-30 15:53:43', 1, 2),
(3, 'ADD', '2013-09-30 15:53:43', 1, 3);

--
-- Contraintes pour les tables exportées
--

--
-- Contraintes pour la table `t_evaluations`
--
ALTER TABLE `t_evaluations`
  ADD CONSTRAINT `FKD092F52C80E357B3` FOREIGN KEY (`test_id`) REFERENCES `t_sheets` (`id`),
  ADD CONSTRAINT `FKD092F52CB47E1D1C` FOREIGN KEY (`profil_id`) REFERENCES `t_profils` (`id`);

--
-- Contraintes pour la table `t_profil_historiques`
--
ALTER TABLE `t_profil_historiques`
  ADD CONSTRAINT `FK6BE26C7EB47E1D1C` FOREIGN KEY (`profil_id`) REFERENCES `t_profils` (`id`),
  ADD CONSTRAINT `FK6BE26C7EB6A7DB29` FOREIGN KEY (`admin_id`) REFERENCES `t_profils` (`id`);

--
-- Contraintes pour la table `t_propositions_responses`
--
ALTER TABLE `t_propositions_responses`
  ADD CONSTRAINT `FK240AA31BB2D8945C` FOREIGN KEY (`question_id`) REFERENCES `t_questions` (`id`);

--
-- Contraintes pour la table `t_questions`
--
ALTER TABLE `t_questions`
  ADD CONSTRAINT `FKBE28F30280E357B3` FOREIGN KEY (`test_id`) REFERENCES `t_sheets` (`id`);

--
-- Contraintes pour la table `t_responses`
--
ALTER TABLE `t_responses`
  ADD CONSTRAINT `FKB38F2607B2D8945C` FOREIGN KEY (`question_id`) REFERENCES `t_questions` (`id`),
  ADD CONSTRAINT `FKB38F26079D5C3C1C` FOREIGN KEY (`evaluation_id`) REFERENCES `t_evaluations` (`id`);

--
-- Contraintes pour la table `t_responses_t_propositions_responses`
--
ALTER TABLE `t_responses_t_propositions_responses`
  ADD CONSTRAINT `FK81047A1318B2F27C` FOREIGN KEY (`response_id`) REFERENCES `t_responses` (`id`),
  ADD CONSTRAINT `FK81047A1351DBDBDE` FOREIGN KEY (`proposition_id`) REFERENCES `t_propositions_responses` (`id`);

--
-- Contraintes pour la table `t_sheet_historiques`
--
ALTER TABLE `t_sheet_historiques`
  ADD CONSTRAINT `FKD174920B80E357B3` FOREIGN KEY (`test_id`) REFERENCES `t_sheets` (`id`),
  ADD CONSTRAINT `FKD174920BB6A7DB29` FOREIGN KEY (`admin_id`) REFERENCES `t_profils` (`id`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
